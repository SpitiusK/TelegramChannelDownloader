<Window x:Class="TelegramChannelDownloader.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TelegramChannelDownloader"
        xmlns:converters="clr-namespace:TelegramChannelDownloader.Converters"
        xmlns:behaviors="clr-namespace:TelegramChannelDownloader.Behaviors"
        mc:Ignorable="d"
        Title="Telegram Channel Downloader" Height="700" Width="900"
        MinHeight="600" MinWidth="700"
        WindowStartupLocation="CenterScreen">
    
    <Window.Resources>
        <!-- Converters -->
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:LogLevelToColorConverter x:Key="LogLevelToColorConverter"/>
        <converters:ValidationToBorderBrushConverter x:Key="ValidationToBorderBrushConverter"/>
        <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter"/>
        <converters:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>
        <converters:TimeSpanToStringConverter x:Key="TimeSpanToStringConverter"/>
        <converters:DoubleToSpeedStringConverter x:Key="DoubleToSpeedStringConverter"/>
        <converters:MessageDataToPreviewConverter x:Key="MessageDataToPreviewConverter"/>
        <converters:ProgressToColorConverter x:Key="ProgressToColorConverter"/>
        
        <!-- Styles for consistent UI -->
        <Style x:Key="SectionGroupBoxStyle" TargetType="GroupBox">
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="#CCCCCC"/>
        </Style>
        
        <Style x:Key="InputTextBoxStyle" TargetType="TextBox">
            <Setter Property="Padding" Value="8"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#CCCCCC"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="#0078D4"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="LabelStyle" TargetType="Label">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0,0,8,0"/>
            <Setter Property="MinWidth" Value="100"/>
        </Style>
        
        <Style x:Key="PrimaryButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#0078D4"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="16,8"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="3">
                            <ContentPresenter HorizontalAlignment="Center"
                                            VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#106EBE"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#005A9E"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#CCCCCC"/>
                    <Setter Property="Foreground" Value="#666666"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="SecondaryButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#323130"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#CCCCCC"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="MinWidth" Value="80"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3">
                            <ContentPresenter HorizontalAlignment="Center"
                                            VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#F3F2F1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#EDEBE9"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="StatusIndicatorStyle" TargetType="Ellipse">
            <Setter Property="Width" Value="12"/>
            <Setter Property="Height" Value="12"/>
            <Setter Property="Fill" Value="Gray"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,8,0"/>
        </Style>
        
        <!-- Validation Error Text Style -->
        <Style x:Key="ValidationErrorTextStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Red"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="Margin" Value="0,2,0,4"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
        
        <!-- Loading Indicator Style -->
        <Style x:Key="LoadingTextStyle" TargetType="TextBlock">
            <Setter Property="FontStyle" Value="Italic"/>
            <Setter Property="Foreground" Value="#666666"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        
        <!-- Log Entry Style -->
        <Style x:Key="LogEntryStyle" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="Margin" Value="0,1"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
    </Window.Resources>

    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>  <!-- Toast Notification Row -->
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <!-- Toast Notification -->
        <Border Grid.Row="2"
                Background="#0F7B0F"
                CornerRadius="6"
                Padding="16,12"
                Margin="0,0,0,16"
                HorizontalAlignment="Stretch"
                Visibility="{Binding ShowCompletionNotification, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Border.Effect>
                <DropShadowEffect Color="Black" Opacity="0.2" ShadowDepth="2" BlurRadius="8"/>
            </Border.Effect>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <TextBlock Grid.Column="0"
                           Text="✓"
                           FontSize="16"
                           FontWeight="Bold"
                           Foreground="White"
                           VerticalAlignment="Center"
                           Margin="0,0,12,0"/>
                
                <TextBlock Grid.Column="1"
                           Text="{Binding CompletionMessage}"
                           FontSize="13"
                           FontWeight="SemiBold"
                           Foreground="White"
                           TextWrapping="Wrap"
                           VerticalAlignment="Center"/>
                
                <Button Grid.Column="2"
                        Command="{Binding DismissNotificationCommand}"
                        Background="Transparent"
                        BorderThickness="0"
                        Foreground="White"
                        FontSize="14"
                        FontWeight="Bold"
                        Padding="8,4"
                        Margin="8,0,0,0"
                        Content="✕"
                        ToolTip="Dismiss notification"/>
            </Grid>
        </Border>

        <!-- Authentication Section -->
        <GroupBox Grid.Row="0" Header="Authentication" Style="{StaticResource SectionGroupBoxStyle}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- API ID Row -->
                <Label Grid.Row="0" Grid.Column="0" Content="API ID:" Style="{StaticResource LabelStyle}"/>
                <StackPanel Grid.Row="0" Grid.Column="1" Margin="0,4">
                    <TextBox Text="{Binding ApiId, UpdateSourceTrigger=PropertyChanged}"
                             Style="{StaticResource InputTextBoxStyle}"
                             BorderBrush="{Binding IsApiIdValid, Converter={StaticResource ValidationToBorderBrushConverter}}"
                             ToolTip="Enter your Telegram API ID (numeric value)"
                             AutomationProperties.Name="API ID"
                             AutomationProperties.HelpText="Enter your Telegram API ID obtained from my.telegram.org"
                             TabIndex="1"/>
                    <TextBlock Text="{Binding ApiIdValidationMessage}"
                               Style="{StaticResource ValidationErrorTextStyle}"
                               Visibility="{Binding ApiIdValidationMessage, Converter={StaticResource StringToVisibilityConverter}}"/>
                </StackPanel>

                <!-- API Hash Row -->
                <Label Grid.Row="1" Grid.Column="0" Content="API Hash:" Style="{StaticResource LabelStyle}"/>
                <StackPanel Grid.Row="1" Grid.Column="1" Margin="0,4">
                    <TextBox Text="{Binding ApiHash, UpdateSourceTrigger=PropertyChanged}"
                             Style="{StaticResource InputTextBoxStyle}"
                             BorderBrush="{Binding IsApiHashValid, Converter={StaticResource ValidationToBorderBrushConverter}}"
                             ToolTip="Enter your Telegram API Hash (32-character hexadecimal string)"
                             AutomationProperties.Name="API Hash"
                             AutomationProperties.HelpText="Enter your Telegram API Hash obtained from my.telegram.org"
                             TabIndex="2"/>
                    <TextBlock Text="{Binding ApiHashValidationMessage}"
                               Style="{StaticResource ValidationErrorTextStyle}"
                               Visibility="{Binding ApiHashValidationMessage, Converter={StaticResource StringToVisibilityConverter}}"/>
                </StackPanel>

                <!-- Phone Number Row (conditionally visible) -->
                <Label Grid.Row="2" Grid.Column="0" Content="Phone Number:" Style="{StaticResource LabelStyle}"
                       Visibility="{Binding IsPhoneNumberRequired, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <StackPanel Grid.Row="2" Grid.Column="1" 
                           Visibility="{Binding IsPhoneNumberRequired, Converter={StaticResource BooleanToVisibilityConverter}}"
                           Margin="0,4">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0"
                                 Text="{Binding PhoneNumber, UpdateSourceTrigger=PropertyChanged}"
                                 Style="{StaticResource InputTextBoxStyle}"
                                 BorderBrush="{Binding IsPhoneNumberValid, Converter={StaticResource ValidationToBorderBrushConverter}}"
                                 ToolTip="Enter your phone number with country code (e.g., +1234567890)"
                                 AutomationProperties.Name="Phone Number"
                                 AutomationProperties.HelpText="Enter your phone number including country code"
                                 TabIndex="3"
                                 Margin="0,0,8,0"/>
                        <Button Grid.Column="1"
                                Content="Submit"
                                Command="{Binding SubmitPhoneCommand}"
                                Style="{StaticResource SecondaryButtonStyle}"
                                AutomationProperties.Name="Submit Phone Number"
                                TabIndex="4"/>
                    </Grid>
                    <TextBlock Text="{Binding PhoneNumberValidationMessage}"
                               Style="{StaticResource ValidationErrorTextStyle}"
                               Visibility="{Binding PhoneNumberValidationMessage, Converter={StaticResource StringToVisibilityConverter}}"/>
                </StackPanel>

                <!-- Verification Code Row (conditionally visible) -->
                <Label Grid.Row="3" Grid.Column="0" Content="Verification Code:" Style="{StaticResource LabelStyle}"
                       Visibility="{Binding IsVerificationCodeRequired, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <StackPanel Grid.Row="3" Grid.Column="1" 
                           Visibility="{Binding IsVerificationCodeRequired, Converter={StaticResource BooleanToVisibilityConverter}}"
                           Margin="0,4">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0"
                                 Text="{Binding VerificationCode, UpdateSourceTrigger=PropertyChanged}"
                                 Style="{StaticResource InputTextBoxStyle}"
                                 BorderBrush="{Binding IsVerificationCodeValid, Converter={StaticResource ValidationToBorderBrushConverter}}"
                                 ToolTip="Enter the 5-digit verification code sent to your phone"
                                 AutomationProperties.Name="Verification Code"
                                 AutomationProperties.HelpText="Enter the verification code received via SMS"
                                 TabIndex="5"
                                 Margin="0,0,8,0"/>
                        <Button Grid.Column="1"
                                Content="Verify"
                                Command="{Binding SubmitCodeCommand}"
                                Style="{StaticResource SecondaryButtonStyle}"
                                AutomationProperties.Name="Verify Code"
                                TabIndex="6"/>
                    </Grid>
                    <TextBlock Text="{Binding VerificationCodeValidationMessage}"
                               Style="{StaticResource ValidationErrorTextStyle}"
                               Visibility="{Binding VerificationCodeValidationMessage, Converter={StaticResource StringToVisibilityConverter}}"/>
                </StackPanel>

                <!-- 2FA Code Row (conditionally visible) -->
                <Label Grid.Row="4" Grid.Column="0" Content="2FA Code:" Style="{StaticResource LabelStyle}"
                       Visibility="{Binding IsTwoFactorRequired, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <StackPanel Grid.Row="4" Grid.Column="1" 
                           Visibility="{Binding IsTwoFactorRequired, Converter={StaticResource BooleanToVisibilityConverter}}"
                           Margin="0,4">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0"
                                 Text="{Binding TwoFactorCode, UpdateSourceTrigger=PropertyChanged}"
                                 Style="{StaticResource InputTextBoxStyle}"
                                 BorderBrush="{Binding IsTwoFactorCodeValid, Converter={StaticResource ValidationToBorderBrushConverter}}"
                                 ToolTip="Enter your two-factor authentication password"
                                 AutomationProperties.Name="Two-Factor Authentication Password"
                                 AutomationProperties.HelpText="Enter your cloud password for two-factor authentication"
                                 TabIndex="7"
                                 Margin="0,0,8,0"/>
                        <Button Grid.Column="1"
                                Content="Verify"
                                Command="{Binding SubmitTwoFactorCommand}"
                                Style="{StaticResource SecondaryButtonStyle}"
                                AutomationProperties.Name="Verify Two-Factor Code"
                                TabIndex="8"/>
                    </Grid>
                    <TextBlock Text="{Binding TwoFactorCodeValidationMessage}"
                               Style="{StaticResource ValidationErrorTextStyle}"
                               Visibility="{Binding TwoFactorCodeValidationMessage, Converter={StaticResource StringToVisibilityConverter}}"/>
                </StackPanel>

                <!-- Connect Button Row -->
                <Button Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2"
                        Command="{Binding ConnectCommand}"
                        Style="{StaticResource PrimaryButtonStyle}"
                        HorizontalAlignment="Left"
                        Margin="0,12,0,8"
                        AutomationProperties.Name="Initialize Connection"
                        AutomationProperties.HelpText="Initialize connection to Telegram using provided credentials"
                        TabIndex="9">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="⟳" 
                                       FontSize="14"
                                       Margin="0,0,4,0"
                                       RenderTransformOrigin="0.5,0.5"
                                       Visibility="{Binding IsConnecting, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <TextBlock.RenderTransform>
                                    <RotateTransform/>
                                </TextBlock.RenderTransform>
                                <TextBlock.Triggers>
                                    <EventTrigger RoutedEvent="Loaded">
                                        <BeginStoryboard>
                                            <Storyboard RepeatBehavior="Forever">
                                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Angle"
                                                                 From="0" To="360" Duration="0:0:1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </TextBlock.Triggers>
                            </TextBlock>
                            <TextBlock>
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Text" Value="Initialize Connection"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsConnecting}" Value="True">
                                                <Setter Property="Text" Value="Connecting..."/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                    </Button.Content>
                </Button>

                <!-- Status Row -->
                <StackPanel Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2" 
                            Orientation="Horizontal" 
                            Margin="0,8">
                    <Label Content="Status:" Style="{StaticResource LabelStyle}" Margin="0"/>
                    <Ellipse>
                        <Ellipse.Style>
                            <Style TargetType="Ellipse" BasedOn="{StaticResource StatusIndicatorStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsConnected}" Value="True">
                                        <Setter Property="Fill" Value="Green"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsConnecting}" Value="True">
                                        <Setter Property="Fill" Value="Orange"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Ellipse.Style>
                    </Ellipse>
                    <TextBlock Text="{Binding ConnectionStatus}" 
                               VerticalAlignment="Center"
                               FontSize="12"/>
                    <TextBlock Text="●" 
                               Foreground="Orange"
                               FontSize="16"
                               VerticalAlignment="Center"
                               Margin="8,0,0,0"
                               Visibility="{Binding IsConnecting, Converter={StaticResource BooleanToVisibilityConverter}}"
                               RenderTransformOrigin="0.5,0.5">
                        <TextBlock.RenderTransform>
                            <RotateTransform/>
                        </TextBlock.RenderTransform>
                        <TextBlock.Triggers>
                            <EventTrigger RoutedEvent="Loaded">
                                <BeginStoryboard>
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Angle"
                                                         From="0" To="360" Duration="0:0:1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </TextBlock.Triggers>
                    </TextBlock>
                </StackPanel>
            </Grid>
        </GroupBox>

        <!-- Channel Download Section -->
        <GroupBox Grid.Row="1" Header="Channel Download" Style="{StaticResource SectionGroupBoxStyle}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>  <!-- Channel Input -->
                    <RowDefinition Height="Auto"/>  <!-- Channel Information Panel -->
                    <RowDefinition Height="Auto"/>  <!-- Download Configuration -->
                    <RowDefinition Height="Auto"/>  <!-- Download Button -->
                    <RowDefinition Height="Auto"/>  <!-- Enhanced Progress Display -->
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Enhanced Channel URL Input Row -->
                <Label Grid.Row="0" Grid.Column="0" Content="Channel URL:" Style="{StaticResource LabelStyle}"/>
                <StackPanel Grid.Row="0" Grid.Column="1" Margin="0,4">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        
                        <TextBox Grid.Column="0"
                                 Text="{Binding ChannelUrl, UpdateSourceTrigger=PropertyChanged}"
                                 Style="{StaticResource InputTextBoxStyle}"
                                 BorderBrush="{Binding IsChannelUrlValid, Converter={StaticResource ValidationToBorderBrushConverter}}"
                                 ToolTip="Enter channel username or full URL. Examples: channelname, @channelname, t.me/channelname, or https://t.me/channelname"
                                 AutomationProperties.Name="Channel URL"
                                 AutomationProperties.HelpText="Enter the Telegram channel username or URL to download"
                                 TabIndex="10"
                                 IsEnabled="{Binding IsConnected}">
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox">
                                    <Border Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="3">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            
                                            <!-- Placeholder prefix -->
                                            <TextBlock Grid.Column="0"
                                                       Text="t.me/" 
                                                       Foreground="#999999"
                                                       VerticalAlignment="Center"
                                                       Margin="10,0,5,0"
                                                       FontSize="12"
                                                       Visibility="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource StringToVisibilityConverter}, ConverterParameter=Inverse}"/>
                                            
                                            <!-- Placeholder text -->
                                            <TextBlock Grid.Column="1"
                                                       Text="channelname or @channelname" 
                                                       Foreground="#CCCCCC"
                                                       VerticalAlignment="Center"
                                                       Margin="5,0,10,0"
                                                       FontSize="12"
                                                       FontStyle="Italic"
                                                       IsHitTestVisible="False"
                                                       Visibility="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource StringToVisibilityConverter}, ConverterParameter=Inverse}"/>
                                            
                                            <!-- Content host -->
                                            <ScrollViewer Grid.Column="0" Grid.ColumnSpan="2"
                                                          x:Name="PART_ContentHost" 
                                                          Margin="10,0,10,0"
                                                          VerticalAlignment="Center"/>
                                        </Grid>
                                    </Border>
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        
                        <!-- Channel validation loading indicator -->
                        <StackPanel Grid.Column="1" 
                                    Orientation="Horizontal" 
                                    VerticalAlignment="Center"
                                    Margin="8,0,0,0"
                                    Visibility="{Binding IsValidatingChannel, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <TextBlock Text="⟳" 
                                       FontSize="14"
                                       Foreground="#0078D4"
                                       RenderTransformOrigin="0.5,0.5">
                                <TextBlock.RenderTransform>
                                    <RotateTransform/>
                                </TextBlock.RenderTransform>
                                <TextBlock.Triggers>
                                    <EventTrigger RoutedEvent="Loaded">
                                        <BeginStoryboard>
                                            <Storyboard RepeatBehavior="Forever">
                                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Angle"
                                                                 From="0" To="360" Duration="0:0:1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </TextBlock.Triggers>
                            </TextBlock>
                            <TextBlock Text="Validating..." 
                                       FontSize="11"
                                       Foreground="#0078D4"
                                       VerticalAlignment="Center"
                                       Margin="4,0,0,0"/>
                        </StackPanel>
                        
                        <!-- Channel validation status indicator -->
                        <StackPanel Grid.Column="1" 
                                    Orientation="Horizontal" 
                                    VerticalAlignment="Center"
                                    Margin="8,0,0,0"
                                    Visibility="{Binding IsValidatingChannel, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                            <Ellipse Width="12" Height="12" 
                                     VerticalAlignment="Center"
                                     Margin="0,0,4,0">
                                <Ellipse.Style>
                                    <Style TargetType="Ellipse">
                                        <Setter Property="Fill" Value="Gray"/>
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding HasValidChannel}" Value="True">
                                                <Setter Property="Fill" Value="Green"/>
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding HasValidChannel}" Value="False"/>
                                                    <Condition Binding="{Binding ChannelInfo, Converter={StaticResource StringToVisibilityConverter}}" Value="Visible"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Fill" Value="Orange"/>
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Ellipse.Style>
                            </Ellipse>
                            <TextBlock FontSize="10" 
                                       VerticalAlignment="Center"
                                       Foreground="#666666">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Text" Value=""/>
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding HasValidChannel}" Value="True">
                                                <Setter Property="Text" Value="Ready"/>
                                                <Setter Property="Foreground" Value="Green"/>
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding HasValidChannel}" Value="False"/>
                                                    <Condition Binding="{Binding ChannelInfo, Converter={StaticResource StringToVisibilityConverter}}" Value="Visible"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Text" Value="Warning"/>
                                                <Setter Property="Foreground" Value="Orange"/>
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                    </Grid>
                    
                    <!-- Validation message -->
                    <TextBlock Text="{Binding ChannelUrlValidationMessage}"
                               Style="{StaticResource ValidationErrorTextStyle}"
                               Visibility="{Binding ChannelUrlValidationMessage, Converter={StaticResource StringToVisibilityConverter}}"/>
                    
                    <!-- Channel validation message -->
                    <TextBlock Text="{Binding ChannelValidationMessage}"
                               FontSize="11"
                               Margin="0,2,0,4"
                               TextWrapping="Wrap"
                               Visibility="{Binding ChannelValidationMessage, Converter={StaticResource StringToVisibilityConverter}}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="#666666"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding HasValidChannel}" Value="True">
                                        <Setter Property="Foreground" Value="Green"/>
                                    </DataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding HasValidChannel}" Value="False"/>
                                            <Condition Binding="{Binding ChannelInfo, Converter={StaticResource StringToVisibilityConverter}}" Value="Visible"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Foreground" Value="Orange"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>

                <!-- Channel Information Display Panel -->
                <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" 
                      Margin="0,8,0,0"
                      Visibility="{Binding ChannelInfo, Converter={StaticResource StringToVisibilityConverter}}">
                    <Border Background="#F8F9FA"
                            BorderBrush="#E1E5E9"
                            BorderThickness="1"
                            CornerRadius="6"
                            Padding="12">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            
                            <!-- Channel Header Info -->
                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                
                                <StackPanel Grid.Column="0" Orientation="Vertical">
                                    <!-- Channel Name and Type -->
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,4">
                                        <TextBlock Text="{Binding ChannelInfo.DisplayName}"
                                                   FontWeight="SemiBold"
                                                   FontSize="14"
                                                   Foreground="#323130"
                                                   VerticalAlignment="Center"/>
                                        
                                        <!-- Verification badge -->
                                        <Border Background="#0078D4"
                                                CornerRadius="3"
                                                Padding="4,2"
                                                Margin="8,0,0,0"
                                                VerticalAlignment="Center"
                                                Visibility="{Binding ChannelInfo.IsVerified, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="✓" 
                                                           Foreground="White" 
                                                           FontSize="10" 
                                                           FontWeight="Bold"/>
                                                <TextBlock Text="Verified" 
                                                           Foreground="White" 
                                                           FontSize="10" 
                                                           Margin="2,0,0,0"/>
                                            </StackPanel>
                                        </Border>
                                        
                                        <!-- Scam warning -->
                                        <Border Background="#D13438"
                                                CornerRadius="3"
                                                Padding="4,2"
                                                Margin="8,0,0,0"
                                                VerticalAlignment="Center"
                                                Visibility="{Binding ChannelInfo.IsScam, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <TextBlock Text="SCAM" 
                                                       Foreground="White" 
                                                       FontSize="10" 
                                                       FontWeight="Bold"/>
                                        </Border>
                                    </StackPanel>
                                    
                                    <!-- Channel Stats -->
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,4">
                                        <TextBlock Text="{Binding ChannelInfo.Type}"
                                                   FontSize="11"
                                                   Foreground="#605E5C"
                                                   Margin="0,0,16,0"/>
                                        <TextBlock Text="{Binding ChannelInfo.MemberCount, StringFormat='N0'}"
                                                   FontSize="11"
                                                   Foreground="#605E5C"
                                                   Margin="0,0,4,0"/>
                                        <TextBlock Text="members"
                                                   FontSize="11"
                                                   Foreground="#605E5C"
                                                   Margin="0,0,16,0"/>
                                        <TextBlock Text="{Binding ChannelInfo.MessageCount, StringFormat='N0'}"
                                                   FontSize="11"
                                                   Foreground="#605E5C"
                                                   Margin="0,0,4,0"/>
                                        <TextBlock Text="messages"
                                                   FontSize="11"
                                                   Foreground="#605E5C"/>
                                    </StackPanel>
                                    
                                    <!-- Channel URL for public channels -->
                                    <TextBlock Text="{Binding ChannelInfo.ChannelUrl}"
                                               FontSize="11"
                                               Foreground="#0078D4"
                                               TextDecorations="Underline"
                                               Cursor="Hand"
                                               Visibility="{Binding ChannelInfo.IsPublic, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                </StackPanel>
                                
                                <!-- Download Status Indicator -->
                                <StackPanel Grid.Column="1" 
                                            Orientation="Vertical" 
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Top">
                                    <Border CornerRadius="12"
                                            Padding="8,4"
                                            HorizontalAlignment="Center">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ChannelInfo.CanDownload}" Value="True">
                                                        <Setter Property="Background" Value="#D4F4DD"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ChannelInfo.CanDownload}" Value="False">
                                                        <Setter Property="Background" Value="#FDF2F2"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <TextBlock FontSize="11" 
                                                   FontWeight="SemiBold"
                                                   HorizontalAlignment="Center">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ChannelInfo.CanDownload}" Value="True">
                                                            <Setter Property="Text" Value="Ready to Download"/>
                                                            <Setter Property="Foreground" Value="#0F7B0F"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ChannelInfo.CanDownload}" Value="False">
                                                            <Setter Property="Text" Value="Cannot Download"/>
                                                            <Setter Property="Foreground" Value="#D13438"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </Border>
                                    
                                    <!-- Estimated download size (placeholder for now) -->
                                    <TextBlock Text="Est. size: ~Unknown"
                                               FontSize="10"
                                               Foreground="#605E5C"
                                               HorizontalAlignment="Center"
                                               Margin="0,4,0,0"/>
                                </StackPanel>
                            </Grid>
                            
                            <!-- Channel Description (if available) -->
                            <Border Grid.Row="1" 
                                    Background="White"
                                    BorderBrush="#E1E5E9"
                                    BorderThickness="1"
                                    CornerRadius="4"
                                    Padding="8"
                                    Margin="0,8,0,0"
                                    Visibility="{Binding ChannelInfo.Description, Converter={StaticResource StringToVisibilityConverter}}">
                                <ScrollViewer MaxHeight="60" 
                                              VerticalScrollBarVisibility="Auto"
                                              HorizontalScrollBarVisibility="Disabled">
                                    <TextBlock Text="{Binding ChannelInfo.Description}"
                                               FontSize="11"
                                               Foreground="#605E5C"
                                               TextWrapping="Wrap"/>
                                </ScrollViewer>
                            </Border>
                            
                            <!-- Warning Messages -->
                            <Border Grid.Row="1" 
                                    Background="#FFF4CE"
                                    BorderBrush="#FFE69C"
                                    BorderThickness="1"
                                    CornerRadius="4"
                                    Padding="8"
                                    Margin="0,8,0,0"
                                    Visibility="{Binding ChannelInfo.ValidationMessage, Converter={StaticResource StringToVisibilityConverter}}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="⚠" 
                                               FontSize="12" 
                                               Foreground="#8A6000"
                                               VerticalAlignment="Top"
                                               Margin="0,0,6,0"/>
                                    <TextBlock Text="{Binding ChannelInfo.ValidationMessage}"
                                               FontSize="11"
                                               Foreground="#8A6000"
                                               TextWrapping="Wrap"/>
                                </StackPanel>
                            </Border>
                        </Grid>
                    </Border>
                </Grid>

                <!-- Output Directory Row -->
                <Label Grid.Row="2" Grid.Column="0" Content="Output Directory:" Style="{StaticResource LabelStyle}"/>
                <StackPanel Grid.Row="2" Grid.Column="1" Margin="0,4">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0"
                                 Text="{Binding OutputDirectory, UpdateSourceTrigger=PropertyChanged}"
                                 Style="{StaticResource InputTextBoxStyle}"
                                 BorderBrush="{Binding IsOutputDirectoryValid, Converter={StaticResource ValidationToBorderBrushConverter}}"
                                 ToolTip="Select the directory where downloaded files will be saved"
                                 AutomationProperties.Name="Output Directory"
                                 AutomationProperties.HelpText="Path to the directory where downloaded files will be saved"
                                 TabIndex="11"/>
                        <Button Grid.Column="1"
                                Content="Browse"
                                Command="{Binding BrowseDirectoryCommand}"
                                Style="{StaticResource SecondaryButtonStyle}"
                                AutomationProperties.Name="Browse Directory"
                                AutomationProperties.HelpText="Open folder browser to select output directory"
                                TabIndex="12"
                                Margin="8,0,0,0"/>
                    </Grid>
                    <TextBlock Text="{Binding OutputDirectoryValidationMessage}"
                               Style="{StaticResource ValidationErrorTextStyle}"
                               Visibility="{Binding OutputDirectoryValidationMessage, Converter={StaticResource StringToVisibilityConverter}}"/>
                </StackPanel>

                <!-- Download and Cancel Button Row -->
                <StackPanel Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" 
                           Orientation="Horizontal"
                           Margin="0,12,0,8">
                    <Button Command="{Binding DownloadCommand}"
                            Style="{StaticResource PrimaryButtonStyle}"
                            IsEnabled="{Binding IsConnected}"
                            AutomationProperties.Name="Download Channel"
                            AutomationProperties.HelpText="Start downloading content from the specified channel"
                            TabIndex="13">
                        <Button.Content>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="⬇" 
                                           FontSize="14"
                                           Margin="0,0,4,0"
                                           Visibility="{Binding IsDownloading, Converter={StaticResource InverseBooleanToVisibilityConverter}}"/>
                                <TextBlock Text="⟳" 
                                           FontSize="14"
                                           Margin="0,0,4,0"
                                           RenderTransformOrigin="0.5,0.5"
                                           Visibility="{Binding IsDownloading, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <TextBlock.RenderTransform>
                                        <RotateTransform/>
                                    </TextBlock.RenderTransform>
                                    <TextBlock.Triggers>
                                        <EventTrigger RoutedEvent="Loaded">
                                            <BeginStoryboard>
                                                <Storyboard RepeatBehavior="Forever">
                                                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Angle"
                                                                     From="0" To="360" Duration="0:0:1"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </TextBlock.Triggers>
                                </TextBlock>
                                <TextBlock>
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Text" Value="Download Channel"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsDownloading}" Value="True">
                                                    <Setter Property="Text" Value="Downloading..."/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                    
                    <!-- Cancel Button -->
                    <Button Command="{Binding CancelDownloadCommand}"
                            Background="#D13438"
                            Foreground="White"
                            BorderThickness="0"
                            Padding="12,6"
                            FontSize="11"
                            FontWeight="SemiBold"
                            Height="28"
                            MinWidth="80"
                            Margin="8,0,0,0"
                            Visibility="{Binding CanCancelDownload, Converter={StaticResource BooleanToVisibilityConverter}}"
                            AutomationProperties.Name="Cancel Download"
                            AutomationProperties.HelpText="Cancel the current download operation"
                            TabIndex="14">
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}"
                                        CornerRadius="3">
                                    <ContentPresenter HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Button.Template>
                        <Button.Style>
                            <Style TargetType="Button">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#B22226"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="#9C1E22"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="#CCCCCC"/>
                                        <Setter Property="Foreground" Value="#666666"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="✕" 
                                       FontSize="12"
                                       Margin="0,0,4,0"/>
                            <TextBlock Text="Cancel"/>
                        </StackPanel>
                    </Button>
                </StackPanel>

                <!-- Enhanced Progress Section -->
                <Border Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3" 
                        Margin="0,8,0,0"
                        Background="#F8F9FA"
                        BorderBrush="#E1E5E9"
                        BorderThickness="1"
                        CornerRadius="6"
                        Padding="16,12"
                        Visibility="{Binding IsDownloading, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        
                        <!-- Progress Header -->
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            
                            <TextBlock Grid.Column="0"
                                       Text="{Binding ProgressText}"
                                       FontSize="14"
                                       FontWeight="SemiBold"
                                       Foreground="#323130"
                                       VerticalAlignment="Center"/>
                            
                            <StackPanel Grid.Column="1" 
                                        Orientation="Horizontal" 
                                        VerticalAlignment="Center">
                                <TextBlock Text="{Binding DownloadSpeed, Converter={StaticResource DoubleToSpeedStringConverter}}"
                                           FontSize="11"
                                           Foreground="#605E5C"
                                           Margin="0,0,12,0"/>
                                <TextBlock Text="{Binding EstimatedTimeRemaining, Converter={StaticResource TimeSpanToStringConverter}, StringFormat='ETA: {0}'}"
                                           FontSize="11"
                                           Foreground="#605E5C"
                                           Visibility="{Binding EstimatedTimeRemaining, Converter={StaticResource StringToVisibilityConverter}}"/>
                            </StackPanel>
                        </Grid>
                        
                        <!-- Progress Bar -->
                        <Grid Grid.Row="1" Margin="0,8,0,0">
                            <ProgressBar Value="{Binding DownloadProgress}"
                                         Maximum="100"
                                         Height="24"
                                         Background="#F0F0F0"
                                         Foreground="{Binding DownloadProgress, Converter={StaticResource ProgressToColorConverter}}"
                                         BorderBrush="#CCCCCC"
                                         BorderThickness="1"/>
                            <TextBlock Text="{Binding DownloadProgress, StringFormat='{}{0}%'}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontSize="11"
                                       FontWeight="SemiBold"
                                       Foreground="#323130"
                                       IsHitTestVisible="False"/>
                        </Grid>
                        
                        <!-- Current Message Preview -->
                        <Border Grid.Row="2"
                                Background="White"
                                BorderBrush="#E1E5E9"
                                BorderThickness="1"
                                CornerRadius="4"
                                Padding="12,8"
                                Margin="0,8,0,0"
                                Visibility="{Binding CurrentMessage, Converter={StaticResource StringToVisibilityConverter}}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                
                                <TextBlock Grid.Column="0"
                                           Text="Current:"
                                           FontSize="11"
                                           FontWeight="SemiBold"
                                           Foreground="#605E5C"
                                           VerticalAlignment="Top"
                                           Margin="0,0,8,0"/>
                                
                                <TextBlock Grid.Column="1"
                                           Text="{Binding CurrentMessage, Converter={StaticResource MessageDataToPreviewConverter}}"
                                           FontSize="11"
                                           Foreground="#323130"
                                           TextWrapping="Wrap"
                                           MaxHeight="40"/>
                            </Grid>
                        </Border>
                        
                        <!-- Progress Statistics -->
                        <Grid Grid.Row="3" Margin="0,8,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            
                            <StackPanel Grid.Column="0" HorizontalAlignment="Left">
                                <TextBlock Text="Downloaded"
                                           FontSize="10"
                                           Foreground="#605E5C"/>
                                <TextBlock Text="{Binding DownloadedMessages, StringFormat='{}{0:N0}'}"
                                           FontSize="12"
                                           FontWeight="SemiBold"
                                           Foreground="#323130"/>
                            </StackPanel>
                            
                            <StackPanel Grid.Column="1" HorizontalAlignment="Center">
                                <TextBlock Text="Total"
                                           FontSize="10"
                                           Foreground="#605E5C"/>
                                <TextBlock Text="{Binding TotalMessages, StringFormat='{}{0:N0}'}"
                                           FontSize="12"
                                           FontWeight="SemiBold"
                                           Foreground="#323130"/>
                            </StackPanel>
                            
                            <StackPanel Grid.Column="2" HorizontalAlignment="Right">
                                <TextBlock Text="Progress"
                                           FontSize="10"
                                           Foreground="#605E5C"/>
                                <TextBlock Text="{Binding DownloadProgress, StringFormat='{}{0}%'}"
                                           FontSize="12"
                                           FontWeight="SemiBold"
                                           Foreground="#323130"/>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </Border>
            </Grid>
        </GroupBox>

        <!-- Log Output Section -->
        <GroupBox Grid.Row="3" Header="Log Output" Style="{StaticResource SectionGroupBoxStyle}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                
                <!-- Log Controls -->
                <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,8">
                    <Button Content="Clear Log"
                            Command="{Binding ClearLogCommand}"
                            Style="{StaticResource SecondaryButtonStyle}"
                            AutomationProperties.Name="Clear Log"
                            AutomationProperties.HelpText="Clear all log entries from the display"
                            TabIndex="15"
                            Margin="0,0,8,0"/>
                    <TextBlock Text="{Binding LogEntries.Count, StringFormat='Entries: {0}'}"
                               VerticalAlignment="Center"
                               FontSize="11"
                               Foreground="#666666"/>
                </StackPanel>
                
                <!-- Enhanced Log Display -->
                <ScrollViewer Grid.Row="1"
                              x:Name="LogScrollViewer"
                              VerticalScrollBarVisibility="Auto" 
                              HorizontalScrollBarVisibility="Auto"
                              Background="#1E1E1E"
                              Padding="8"
                              behaviors:AutoScrollBehavior.AutoScroll="True">
                    <ItemsControl ItemsSource="{Binding LogEntries}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border Margin="0,1" 
                                        Padding="8,4" 
                                        CornerRadius="3">
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Level}" Value="Error">
                                                    <Setter Property="Background" Value="#3D1A1A"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Level}" Value="Warning">
                                                    <Setter Property="Background" Value="#3D2F1A"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        
                                        <!-- Log Level Icon -->
                                        <TextBlock Grid.Column="0"
                                                   VerticalAlignment="Top"
                                                   Margin="0,0,8,0"
                                                   FontSize="12">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Level}" Value="Info">
                                                            <Setter Property="Text" Value="ℹ"/>
                                                            <Setter Property="Foreground" Value="#4FC3F7"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Level}" Value="Warning">
                                                            <Setter Property="Text" Value="⚠"/>
                                                            <Setter Property="Foreground" Value="#FFB74D"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Level}" Value="Error">
                                                            <Setter Property="Text" Value="✗"/>
                                                            <Setter Property="Foreground" Value="#F06292"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                        
                                        <!-- Timestamp -->
                                        <TextBlock Grid.Column="1"
                                                   Text="{Binding Timestamp, StringFormat='[HH:mm:ss]'}"
                                                   Foreground="#888888"
                                                   FontFamily="Consolas"
                                                   FontSize="10"
                                                   VerticalAlignment="Top"
                                                   Margin="0,0,8,0"/>
                                        
                                        <!-- Message Content -->
                                        <TextBlock Grid.Column="2"
                                                   Text="{Binding Message}"
                                                   Foreground="{Binding Level, Converter={StaticResource LogLevelToColorConverter}}"
                                                   FontFamily="Consolas"
                                                   FontSize="11"
                                                   TextWrapping="Wrap"
                                                   VerticalAlignment="Top">
                                            <!-- Enhanced styling for different message types -->
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Level}" Value="Error">
                                                            <Setter Property="FontWeight" Value="SemiBold"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Level}" Value="Warning">
                                                            <Setter Property="FontWeight" Value="Medium"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
            </Grid>
        </GroupBox>
    </Grid>
</Window>
